version: '3'
services:
  database:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - ./.docker/postgresql:/var/lib/postgresql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-kafka:6.2.0
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  connect:
    image: confluentinc/cp-kafka-connect:6.2.0
    depends_on:
      - kafka
      - database
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: "default"
      CONNECT_CONFIG_STORAGE_TOPIC: "default.config"
      CONNECT_OFFSET_STORAGE_TOPIC: "default.offsets"
      CONNECT_STATUS_STORAGE_TOPIC: "default.status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "default-config"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
    volumes:
      - ./outbox-event-router/build/libs/outbox-event-router.jar:/usr/share/java/outbox-event-router.jar
    command:
      - bash
      - -c
      - |
        echo 'Installing Connector'
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:10.2.0
        echo 'Launching Kafka Connect worker'
        /etc/confluent/docker/run &
        echo 'Waiting for Kafka Connect listener'
        while : ; do
          curl_status=$$(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors)
          echo -e $$(date) ' Kafka Connect listener HTTP state: ' $$curl_status ' (waiting for 200)'
          if [ $$curl_status -eq 200 ] ; then
            break
          fi
          sleep 5
        done
        echo -e '\n--\n+> Creating Kafka Connector'
        curl -s -X PUT -H 'Content-Type: application/json' http://localhost:8083/connectors/outbox-connector/config -d '{
          "tasks.max": "1",
          "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
          "connection.url": "jdbc:postgresql://database:5432/postgres",
          "connection.user": "postgres",
          "connection.password": "postgres",
          "schema.pattern": "public",
          "table.whitelist": "public.products",
          "mode": "incrementing",
          "incrementing.column.name": "id"
        }'
        sleep infinity
